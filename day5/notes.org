* 02 array traversal
数组的长度： arr.length

* 04 array sort
冒泡排序，第一个位置一直向后比较，一直到末尾，然后第二个位置向后比较，
以此类推。

封装好的数组排列： Arrays.sort(arr); 但是需要源文件头部： 
import java.util.*;

* 06 array swap
数组中如果需要交换两个数，并且把这个抽取作为函数进行复用，那么需要注意：
java中没有指针，所以不能直接传两个地址过去，只能传三个参数，一个是数组
名称，另外两个是索引。

* 07 array sort performance
为了提高性能，在数组排序的时候，如果每次碰到大于的时候，就交换位置，比
较浪费效率，可以另外定义一个索引和变量，暂时存放最小值的位置和数值，在
每轮比较结束以后，再做最小值的换位，这样每轮只要换位一次即可，不会浪费
效率。

* 09 binary search
注意： arr.length 这个是长度，在做二分查找的时候，最大数值的索引应该比
长度 -1; 还有注意每次移动索引的时候，min = index + 1,或者 max =
index - 1; 还有 while(min <= max)，否则找不到最大的数。

* 10 binary search insert
如果要向有序数组里面插入一个数值，并且还是有序的：
1. 能找到一个对应的数值，那么直接返回索引
2. 不能找到对应的数值，返回 -min-1; 负号是为了和找到数值相区别，-1是为
   了防止插入的是数据头，因为0的负号还是0,所以-1才能区别开来。
包里面也有人家做好的，直接调用 Arrays.binarySearch(arr,num)即可，返回
值一样的。

* 13 number base conversion
十进制转换2,8,16,只需要一定位数取值，然后 >>> 即可。大于9的数值可以
-10 + 'A'，还可以用查表法来实现，直接用一个数组，里面0-9,'A'-'F'，直接
查表也可以。
包里面也有做好的，Integer.toBinaryString(num)
